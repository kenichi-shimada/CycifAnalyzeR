% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/celltype.R
\name{CellTypeGraph}
\alias{CellTypeGraph}
\title{Generating the levels of cell types and their hierarchy and plotting the cell type hirarchy}
\usage{
CellTypeGraph(
  ctype,
  cname = "default",
  plot = FALSE,
  transpose = TRUE,
  with.hierarchy = FALSE,
  ...
)
}
\arguments{
\item{ctype}{A data frame containing information about parent-child relationships between cell types.
The object should have at least two columns named Parent and Child, and each row contains the relationship between
direct parent and child cell types.}

\item{plot}{Logical, indicating whether to plot the graph.}

\item{transpose}{Logical, indicating whether to transpose the graph layout.}

\item{with.hierarchy}{Logical, indicating whether to include the cell type hierarchy information in output.}

\item{...}{Additional parameters to be passed to the \code{plot} function.}
}
\value{
If \code{with.hierarchy} is \code{TRUE}, returns a list with components \code{ctlevs} (cell type levels)
and \code{hierarchy} (cell type hierarchy data frame). If \code{with.hierarchy} is \code{FALSE},
returns only \code{ctlevs}.
}
\description{
Generating the levels of cell types and their hierarchy and plotting the cell type hirarchy
}
\details{
This function generates a graph that represents the hierarchy of cell types based on parent-child relationships provided as a user input.
If the user-input is a Cycif or CycifStack object, the function extracts cell_lineage_def data frame and use it as the input.
If the input is a data frame, the function assumes that's the definition data frame. It returns the numerical level of each cell type within the hierarchy.
If \code{with.hierarchy} is \code{TRUE}, the hierarchy as a data frame is included in the output.
sers can also generate the cell type hierarchy as a graphical output when \code{plot} is \code{TRUE}.
}
\seealso{
\code{\link{graph_from_data_frame}}, \code{\link{layout_as_tree}}, \code{\link{distances}}
}

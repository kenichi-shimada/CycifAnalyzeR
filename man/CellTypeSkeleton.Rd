% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/celltype.R
\name{CellTypeSkeleton}
\alias{CellTypeSkeleton}
\alias{CellTypeSkeleton,character-method}
\alias{CellTypeSkeleton,Cycif-method}
\alias{CellTypeSkeleton,CycifStack-method}
\title{Generate CellTypes Object}
\usage{
CellTypeSkeleton(x, ...)

\S4method{CellTypeSkeleton}{character}(x, ctype, cstate, ctype.full = FALSE)

\S4method{CellTypeSkeleton}{Cycif}(x, ctype, cstate, ctype.full = FALSE)

\S4method{CellTypeSkeleton}{CycifStack}(x, ctype, cstate, ctype.full = FALSE)
}
\arguments{
\item{x}{A character vector (for character input) or a Cycif/CycifStack object.}

\item{ctype}{A data frame defining cell lineage.}

\item{cstate}{A data frame defining cell state.}

\item{ctype.full}{Logical indicating whether to include the full lineage definition (default is FALSE).}
}
\value{
A CellTypes object containing cell lineage and state definitions.
}
\description{
Generate CellTypes Object Based on Lineage and State Definitions
}
\details{
This function generates a \code{CellTypes} object based on provided lineage and state definitions. It accepts different input types:
\itemize{
\item For a character vector \code{x} containing antibody names, \code{ctype} (cell lineage), and \code{cstate} (cell state) data frames, it creates a CellTypes object with lineage and state definitions.
\item For a Cycif object \code{x}, it uses the antibodies from the object's abs_list to create a CellTypes object.
\item For a CycifStack object \code{x}, it uses the antibodies from the object's abs_list to create a CellTypes object.
}
}
\seealso{
\code{\link{CellTypes}}
}
